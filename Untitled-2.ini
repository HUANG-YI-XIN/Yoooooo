// 名稱：距離感應互動裝置
// 功能描述：
// 1. 使用超音波距離感測器測量距離。
// 2. 當距離小於10公分時：
//    - LED燈亮起。
//    - 伺服馬達轉動到90度。
// 3. 當距離大於10公分時：
//    - LED燈熄滅。
//    - 伺服馬達回到0度。
// 所需材料：
// 1. Arduino UNO x 1
// 2. USB Cable Cord Type A-Male to B-Male x 1
// 3. LED x 1
// 4. 1KΩ電阻 x 1
// 5. 伺服馬達 (Servo Motor) x 1
// 6. HC-SR04超音波距離感測器 x 1
// 7. 杜邦線若干
// 8. 麵包板 x 1

// 硬體連接：
// 1. LED：
//    - 正極接 Arduino 的數位引腳 3。
//    - 串聯 1KΩ 電阻後接 GND。
// 2. 伺服馬達：
//    - 信號線接 Arduino 的數位引腳 4。
//    - VCC 接 5V，GND 接 GND。
// 3. 超音波距離感測器：
//    - VCC 接 5V。
//    - GND 接 GND。
//    - Trig 接 Arduino 的數位引腳 5。
//    - Echo 接 Arduino 的數位引腳 6。

#include <Servo.h>

// 定義引腳
const int trigPin = 5;
const int echoPin = 6;
const int ledPin = 3;
const int servoPin = 4;

// 創建伺服馬達物件
Servo myServo;

void setup() {
  // 初始化引腳模式
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(ledPin, OUTPUT);

  // 初始化伺服馬達
  myServo.attach(servoPin);
  myServo.write(0); // 初始位置為 0 度

  // 初始化序列監視器
  Serial.begin(9600);
}

void loop() {
  // 發送超音波
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // 接收回波時間
  long duration = pulseIn(echoPin, HIGH);

  // 計算距離（單位：公分）
  float distance = duration * 0.034 / 2;

  // 在序列監視器中輸出距離
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  // 根據距離控制 LED 和伺服馬達
  if (distance < 10) {
    digitalWrite(ledPin, HIGH); // LED 亮
    myServo.write(90);          // 伺服馬達轉到 90 度
  } else {
    digitalWrite(ledPin, LOW);  // LED 滅
    myServo.write(0);           // 伺服馬達回到 0 度
  }

  delay(100); // 延遲 100 毫秒
}